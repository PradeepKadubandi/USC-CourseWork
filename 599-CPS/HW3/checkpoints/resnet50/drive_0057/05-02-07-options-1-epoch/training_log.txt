*************************************************************************
Training a Faster R-CNN Object Detector for the following object classes:

* vehicle

Step 1 of 4: Training a Region Proposal Network (RPN).
Warning: Invalid bounding boxes from 67 out of 360 training images were removed. The following rows in trainingData have invalid bounding box data:

Invalid Rows
____________

16
17
18
19
22
23
24
32
33
34
73
74
75
76
77
78
90
91
92
93
94
106
107
108
109
110
119
120
121
122
123
124
133
134
135
136
140
141
142
143
163
164
165
166
184
231
232
317
318
319
320
321
322
323
328
330
331
332
333
334
335
336
339
340
342
343
344

Bounding boxes must be fully contained within their associated image and must have positive width and height. 
Training on single GPU.
|=======================================================================================================|
|  Epoch  |  Iteration  |  Time Elapsed  |  Mini-batch  |  Mini-batch  |  Mini-batch  |  Base Learning  |
|         |             |   (hh:mm:ss)   |     Loss     |   Accuracy   |     RMSE     |      Rate       |
|=======================================================================================================|
|       1 |           1 |       00:00:02 |       0.8204 |       44.31% |         1.05 |          0.0010 |
|       1 |          50 |       00:00:23 |       0.1486 |       97.27% |         0.70 |          0.0010 |
|       1 |         100 |       00:00:44 |       0.1283 |       98.05% |         0.54 |          0.0010 |
|       1 |         150 |       00:01:04 |       0.0973 |       98.83% |         0.52 |          0.0010 |
|       1 |         200 |       00:01:25 |       0.0755 |       98.83% |         0.45 |          0.0010 |
|       1 |         250 |       00:01:46 |       0.0215 |      100.00% |         1.55 |          0.0010 |
|       1 |         300 |       00:02:07 |       0.0241 |      100.00% |         0.43 |          0.0010 |
|       1 |         350 |       00:02:28 |       0.0276 |       99.22% |         0.17 |          0.0010 |
|       1 |         360 |       00:02:32 |       0.0874 |       97.66% |         0.43 |          0.0010 |
|=======================================================================================================|

Step 2 of 4: Training a Fast R-CNN Network using the RPN from step 1.
--> Extracting region proposals from 360 training images...done.

Training on single GPU.
|=======================================================================================================|
|  Epoch  |  Iteration  |  Time Elapsed  |  Mini-batch  |  Mini-batch  |  Mini-batch  |  Base Learning  |
|         |             |   (hh:mm:ss)   |     Loss     |   Accuracy   |     RMSE     |      Rate       |
|=======================================================================================================|
|       1 |           1 |       00:00:01 |       0.7237 |       73.44% |         0.99 |          0.0010 |
|       1 |          50 |       00:00:48 |       0.1818 |       97.66% |         0.73 |          0.0010 |
|       1 |         100 |       00:01:37 |       0.1838 |       96.09% |         0.68 |          0.0010 |
|       1 |         150 |       00:02:25 |       0.0935 |       99.22% |         0.54 |          0.0010 |
|       1 |         200 |       00:03:14 |       0.2310 |       97.66% |         0.65 |          0.0010 |
|       1 |         250 |       00:04:03 |       0.0183 |       99.22% |         0.69 |          0.0010 |
|       1 |         300 |       00:04:52 |       0.1510 |       97.66% |         0.72 |          0.0010 |
|       1 |         350 |       00:05:41 |       0.0374 |      100.00% |         0.45 |          0.0010 |
|       1 |         351 |       00:05:42 |       0.1398 |      100.00% |         0.80 |          0.0010 |
|=======================================================================================================|

Step 3 of 4: Re-training RPN using weight sharing with Fast R-CNN.
Training on single GPU.
|=======================================================================================================|
|  Epoch  |  Iteration  |  Time Elapsed  |  Mini-batch  |  Mini-batch  |  Mini-batch  |  Base Learning  |
|         |             |   (hh:mm:ss)   |     Loss     |   Accuracy   |     RMSE     |      Rate       |
|=======================================================================================================|
|       1 |           1 |       00:00:00 |       0.3042 |       89.80% |         0.63 |          0.0010 |
|       1 |          50 |       00:00:12 |       0.1330 |       98.05% |         0.90 |          0.0010 |
|       1 |         100 |       00:00:23 |       0.0219 |      100.00% |         0.18 |          0.0010 |
|       1 |         150 |       00:00:35 |       0.1960 |       95.28% |         0.56 |          0.0010 |
|       1 |         200 |       00:00:47 |       0.0646 |       99.61% |         0.47 |          0.0010 |
|       1 |         250 |       00:00:59 |       0.1627 |       96.88% |         0.52 |          0.0010 |
|       1 |         300 |       00:01:10 |       0.0400 |       98.83% |         0.23 |          0.0010 |
|       1 |         350 |       00:01:22 |       0.0440 |       99.61% |         0.58 |          0.0010 |
|       1 |         360 |       00:01:25 |       0.0635 |       98.44% |         0.36 |          0.0010 |
|=======================================================================================================|

Step 4 of 4: Re-training Fast R-CNN using updated RPN.
--> Extracting region proposals from 360 training images...done.

Training on single GPU.
|=======================================================================================================|
|  Epoch  |  Iteration  |  Time Elapsed  |  Mini-batch  |  Mini-batch  |  Mini-batch  |  Base Learning  |
|         |             |   (hh:mm:ss)   |     Loss     |   Accuracy   |     RMSE     |      Rate       |
|=======================================================================================================|
|       1 |           1 |       00:00:00 |       0.0479 |      100.00% |         0.47 |          0.0010 |
|       1 |          50 |       00:00:34 |       0.0199 |      100.00% |         0.30 |          0.0010 |
|       1 |         100 |       00:01:08 |       0.0738 |      100.00% |         0.50 |          0.0010 |
|       1 |         150 |       00:01:42 |       0.0333 |      100.00% |         0.38 |          0.0010 |
|       1 |         200 |       00:02:17 |       0.1909 |       97.66% |         0.56 |          0.0010 |
|       1 |         250 |       00:02:51 |       0.1006 |      100.00% |         0.64 |          0.0010 |
|       1 |         300 |       00:03:26 |       0.0143 |      100.00% |         0.26 |          0.0010 |
|       1 |         345 |       00:03:58 |       0.0651 |      100.00% |         0.57 |          0.0010 |
|=======================================================================================================|

Detector training complete (with warnings):
Warning: Invalid bounding boxes from 67 out of 360 training images were removed. The following rows in trainingData have invalid bounding box data:

Invalid Rows
____________

16
17
18
19
22
23
24
32
33
34
73
74
75
76
77
78
90
91
92
93
94
106
107
108
109
110
119
120
121
122
123
124
133
134
135
136
140
141
142
143
163
164
165
166
184
231
232
317
318
319
320
321
322
323
328
330
331
332
333
334
335
336
339
340
342
343
344

Bounding boxes must be fully contained within their associated image and must have positive width and height. 

*******************************************************************

